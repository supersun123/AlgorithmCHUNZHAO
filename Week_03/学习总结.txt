1.分治和回溯
与递归相似，将大问题转化为小问题
算法题：17、78、50
2.DFS：二叉树的前中后序遍历为DFS的三种形式
BFS：广度优先遍历二叉树，借助队列，queue
    public static void bfs(TreeNode root){
        List<List<Integer>> allresult = new ArrayList<>();
        if(root == null){
        return new ArrayList<>();
        }
        Queue<TreeNode> queue = new LinkedList<TreeNode>(); //队列需要使用linkedlist来初始化
        queue.add(root);
        while(queue!=null){
        List<Integer> result = new Arraylist<>();
        int size = queue.size();
        for(int i = 0;i<size;i++）{
         TreeNode tem  = queue.poll();
         result.add(tem.val);
         if(node.left != null){
         queue.add(node.left);
         }
         if(node.right != null){
         queue.add(node.right);        
        }
        }
        allresult.add(result);
 }
return allresult;
}}
算法题：102 200 515
3.贪心算法
并不一定是最优解，但是算法简单
4.二分查找.//一般有序数组问题，都可采用二分查找方式
public int binarySearch(int[] array, int target) 
    {    int left = 0, right = array.length - 1, mid;    
    while (left <= right) {        
        mid = (right - left) / 2 + left;        
        if (array[mid] == target) {           
            return mid;        
        } else if (array[mid] > target) {    
            right = mid - 1;       
        } else {          
            left = mid + 1;      
        }   
    }    
    return -1;
    }
算法题：33、74、、153
笔记：利用二分法查找半有序数组中的值与算法题153相似
心得：这周的任务量比较重，因为这些思想比较难以理解，还有要回顾五毒神掌第四遍（前两周的内容），所有并没有做太多的算法新题，
回顾了Java基础知识，捡起不少，趁着春节这个大窗口，既要理解动态规划，又要巩固之前的知识，春招陆陆续续就要开始了，希望能来的及。
               