class Solution {
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        if(l1==null){
            return l2;
        }
        if (l2==null){
            return l1;
        }
        if(l1.val<=l2.val){
            l1.next = mergeTwoLists(l1.next,l2);
            return l1;
        }else {
            l2.next = mergeTwoLists(l1,l2.next);
            return l2;
        }
    }
}
/*思路：采用递归方法，开始判断两个链表元素的大小，选择较小的元素的链表，并且指向剩余链表和另一个链表迭代的方法，一次类推
，当某一个链表为空时递归结束，此时再由最后一个元素向前寻找迭代方法，直到第一个，形成最后的链表*/
时间复杂度：o(m+n)
